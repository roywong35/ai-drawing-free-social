// Post removal dialog styles
// Using Tailwind classes in template, minimal custom styles needed

// Ensure the host component takes full space
:host {
  display: block;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  
  @media (max-width: 687px) {
    width: 100vw !important;
    height: 100vh !important;
    min-height: 100vh !important;
  }
}

.mat-icon {
  font-size: 20px;
  width: 20px;
  height: 20px;
}

button:focus {
  outline: none;
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5);
}

// Custom scrollbar styling for the scrollable content area
:host ::ng-deep .overflow-y-auto {
  // Webkit browsers (Chrome, Safari)
  &::-webkit-scrollbar {
    width: 6px;
  }
  
  &::-webkit-scrollbar-track {
    background: transparent;
  }
  
  &::-webkit-scrollbar-thumb {
    background: rgba(156, 163, 175, 0.5); /* gray-400 with opacity */
    border-radius: 3px;
  }
  
  &::-webkit-scrollbar-thumb:hover {
    background: rgba(156, 163, 175, 0.8); /* gray-400 with more opacity */
  }
  
  // Dark mode scrollbar
  :global(.dark) & {
    &::-webkit-scrollbar-thumb {
      background: rgba(75, 85, 99, 0.5); /* gray-600 with opacity */
    }
    
    &::-webkit-scrollbar-thumb:hover {
      background: rgba(75, 85, 99, 0.8); /* gray-600 with more opacity */
    }
  }
  
  // Firefox
  scrollbar-width: thin;
  scrollbar-color: rgba(156, 163, 175, 0.5) transparent;
  
  :global(.dark) & {
    scrollbar-color: rgba(75, 85, 99, 0.5) transparent;
  }
}

// Ensure proper spacing and prevent content from being cut off
:host ::ng-deep .flex-1 {
  min-height: 0; /* Allows flex item to shrink below content size */
}

// Dialog overlay configuration for mobile
:host ::ng-deep .post-removal-dialog {
  .mat-mdc-dialog-container {
    padding: 0;
    
    @media (max-width: 687px) {
      max-width: 100vw !important;
      max-height: 100vh !important;
      width: 100vw !important;
      height: 100vh !important;
      border-radius: 0 !important;
      margin: 0 !important;
    }
  }
  
  .mat-mdc-dialog-surface {
    @media (max-width: 687px) {
      border-radius: 0 !important;
    }
  }
}

// Global CSS for the dialog overlay - More aggressive overrides
:global(.post-removal-dialog) {
  // CDK Overlay backdrop
  .cdk-overlay-backdrop {
    @media (max-width: 687px) {
      position: fixed !important;
      top: 0 !important;
      left: 0 !important;
      right: 0 !important;
      bottom: 0 !important;
      width: 100vw !important;
      height: 100vh !important;
      margin: 0 !important;
      padding: 0 !important;
    }
  }
  
  // CDK Overlay pane
  .cdk-overlay-pane {
    @media (max-width: 687px) {
      max-width: 100vw !important;
      max-height: 100vh !important;
      width: 100vw !important;
      height: 100vh !important;
      left: 0 !important;
      top: 0 !important;
      right: 0 !important;
      bottom: 0 !important;
      position: fixed !important;
      margin: 0 !important;
      padding: 0 !important;
      transform: none !important;
    }
  }
  
  // Material dialog container
  .mat-mdc-dialog-container {
    @media (max-width: 687px) {
      max-width: 100vw !important;
      max-height: 100vh !important;
      width: 100vw !important;
      height: 100vh !important;
      margin: 0 !important;
      padding: 0 !important;
      border-radius: 0 !important;
      box-shadow: none !important;
      overflow: visible !important;
    }
  }
  
  // Material dialog surface
  .mat-mdc-dialog-surface {
    @media (max-width: 687px) {
      border-radius: 0 !important;
      box-shadow: none !important;
      width: 100% !important;
      height: 100% !important;
      max-width: none !important;
      max-height: none !important;
      margin: 0 !important;
      padding: 0 !important;
    }
  }
}

// Additional global overrides for CDK overlay
:global(.cdk-overlay-container) {
  .post-removal-dialog {
    .cdk-overlay-pane {
      @media (max-width: 687px) {
        inset: 0 !important;
        margin: 0 !important;
        padding: 0 !important;
      }
    }
  }
}

// Mobile responsiveness handled programmatically with ResizeObserver 